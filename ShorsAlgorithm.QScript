//
//@author: Austin Forry
//

// This is merely a best attempt at an implementation of Shor's Algorithm
// I can in no way gauruntee that this is working as expected

// Resources referenced:
// https://en.wikipedia.org/wiki/Shor%27s_algorithm
// https://en.wikipedia.org/wiki/Euclidean_algorithm

// Q-P builtin Math and QMath documentation:
// http://www.quantumplayground.net/#/playground/5090214850592768


// initialization: 6 qubit register, 2D visualization mode, set a value N (cannot be a prime power)
VectorSize 6
SetViewMode 1
N = 21
// some legal values of N: 15, 21
r = 0
a = 0
c = 0

// get factors and return the largest
proc factorize a
  
  // generate period, r
  // borrowed from the QP implementation based on quantumlib
  // http://www.quantumplayground.net/#/playground/5191954035900416
  for trycnt = 100; trycnt >= 0; trycnt--
    Measure
    c = measured_value
  endfor
  
  temp = QMath.fracApprox(c, 1 << QMath.getWidth(N), QMath.getWidth(N))
  r = temp[1]
  
  // r cannot be odd
  for i = 0; i < 1; i
    if ((r % 2) == 1)
      i = 0
      r = r*2
    else
      i = 1
   	endif
  endfor
  
  Print "value of period 'r' chosen: " + r
  
  // calculate factors
  f1 = QMath.ipow(a, r / 2) + 1 % N
  f2 = QMath.ipow(a, r / 2) - 1 % N
  f1 = QMath.gcd(f1, N)
  f2 = QMath.gcd(f2, N)
  
  if f1 > f2
    output = f1
  else
    output = f2
  endif
  
  // One and N are trivial factors, i.e. any number can be factored by itself or one
  if(output > 1) && (output < N)
  	Print "Nontrivial Factor found: " + output + ". SUCCESS!"
  else
    Print "Trivial Factor found: " + output + ". TRY AGAIN!"
  endif
  
  Display "FINISHED!"
  
endproc

// classical part of Shors Algorithm -- could be done on a classical computer
proc classical N
  
  Print "Value 'N': " + N
  
  // get random value of 'a' less than N
  a = Math.floor(Math.random() * N)
  Print "value of 'a' randomly chosen: " + a
  
  // if gcd(a,N) != 1 then a is nontrivial factor and we are done
  if (QMath.gcd(a,N) != 1)
  	Print "a is nontrivial, algorithm finished!"
    Breakpoint
  endif

  // generate a period, r, and gets result
  factorize a
  
endproc

// begin running Shor's Algorithm
classical N
